services:

  db:
    image: postgis/postgis:12-3.3
    volumes:
      - "postgresql_data:/var/lib/postgresql/data"
    environment:
      - POSTGRES_USER_FILE=/run/secrets/postgres-user
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres-password
      - POSTGRES_DB_FILE=/run/secrets/postgres-db
    secrets:
      - postgres-user
      - postgres-password
      - postgres-db
    ports:
      - "5432:5432"
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
      restart_policy:
        condition: on-failure
        max_attempts: 3

  adminer:
    image: adminer
    ports:
      - "8081:8080"
    depends_on:
      - db
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.3'
          memory: 128M
        reservations:
          cpus: '0.1'
          memory: 64M
      restart_policy:
        condition: on-failure
        max_attempts: 3

  dhis2:
    image: dhis2-app
    build:
      context: .
      dockerfile: Dockerfile
    tty: true
    env_file:
      - ./.env.swarm
    volumes:
      - "fileResource:/opt/dhis2/files"
      - "logs:/opt/dhis2/logs"
    secrets:
      - credentials
    ports:
      # HTTP port removed to enforce HTTPS only
      - "9443:8443"
    depends_on:
      - db
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 2G
      restart_policy:
        condition: on-failure
        max_attempts: 3

  ingress:
    image: dhis2-ingress
    build:
      context: ./ingress
      dockerfile: Dockerfile
    volumes:
      - "./shared:/usr/share/nginx/shared"
    ports:
      - "80:80"    # HTTP (redirects to HTTPS)
      - "443:443"  # HTTPS for DHIS2
      - "444:444"  # HTTPS for Adminer
      - "8000:8000" # HTTP file sharing (redirects to HTTPS)
      - "8443:8443" # HTTPS file sharing
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
      restart_policy:
        condition: on-failure
        max_attempts: 3
    depends_on:
      - adminer

  init:
    build:
      context: ./src
      dockerfile: Dockerfile
    image: dhis2-init
    volumes:
      - "./src:/app"
      - "./src/secrets:/app/secrets"
    environment:
      - DHIS2_URL=https://dhis2:8443
      - DHIS2_USERNAME_FILE=/run/secrets/admin-credentials
      - DHIS2_PASSWORD_FILE=/run/secrets/admin-credentials
    secrets:
      - source: dhis2-admin-credentials
        target: admin-credentials
      - source: dhis2-token
        target: dhis2-token
    depends_on:
      - dhis2
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
      restart_policy:
        condition: none


  sms_gateway:
    image: python:3.9-slim
    volumes:
      - "./sms_gateway:/app"
    working_dir: /app
    ports:
      - "8082:8082"
    command: >
      bash -c "apt-get update && apt-get install -y curl && 
      echo 'Setting up DHIS2 SMS Gateway...' && 
      chmod +x /app/setup_sms_gateway.sh && 
      /app/setup_sms_gateway.sh && 
      echo 'Starting SMS Gateway Service...' && 
      pip install -r requirements.txt && 
      python sms_gateway.py"
    depends_on:
      - dhis2
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
      restart_policy:
        condition: on-failure
        max_attempts: 3

volumes:
  fileResource:
    driver: local
  logs:
    driver: local
  postgresql_data:
    driver: local

networks:
  default:
    driver: overlay

secrets:
  postgres-user:
    file: ./secrets/postgres-user
  postgres-password:
    file: ./secrets/postgres-password
  postgres-db:
    file: ./secrets/postgres-db
  credentials:
    file: ./secrets/credentials
  dhis2-admin-credentials:
    file: ./secrets/dhis2-admin-credentials
  dhis2-token:
    file: ./secrets/dhis2-token