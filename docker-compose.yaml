# Cleanup time


services:

# Sharer service replaced by ingress service with shared folder
#  sharer:
#    container_name: sharer
#    build:
#      context: .
#      dockerfile: Dockerfile.sharer
#    volumes:
#      - "./shared:/share"
#    ports:
#      - "8000:8000"
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost:8000" ]
#      interval: 30s
#      timeout: 10s
#      retries: 3
#      start_period: 30s

  db:
    container_name: db
    image: postgis/postgis:12-3.3
    environment:
      POSTGRES_USER: dhis
      POSTGRES_PASSWORD: dhis
      POSTGRES_DB: dhis2
    volumes:
      - "postgresql_data:/var/lib/postgresql/data"
    ports:
      - "5432:5432"

  adminer:
    container_name: adminer
    image: adminer
    ports:
      - "8081:8080"
    depends_on:
      - db

  dhis2:
    container_name: dhis2
    build:
      context: .
      dockerfile: Dockerfile
    tty: true
    environment:
      TIMEZONE: "Indian/Antananarivo"
      DB_HOST: "db"
      DB_PORT: "5432"
      DB_NAME: "dhis2"
      TOMCAT_ARCHIVE_FILE: "apache-tomcat-9.0.106.tar.gz"
      JAVA_ARCHIVE_FILE: "jdk-17.tar.gz"
      DHIS2_WARFILE_URL: "https://ingress:8443/dhis2.war"
      CERT_SUBJECT: "/C=MG/ST=Antananarivo/L=Antananarivo/O=Global Security/OU=IT Department/CN=localhost"
      JAVA_OPTS: "-Xmx3000m -Xms1000m -Djavax.servlet.request.encoding=UTF-8 -Dfile.encoding=UTF-8"
    volumes:
      - "fileResource:/opt/dhis2/files"
      - "logs:/opt/dhis2/logs"
      - "./credentials:/run/secrets/credentials"
    ports:
      # HTTP port removed to enforce HTTPS only
      - "9443:8443"
    depends_on:
      - db

  ingress:
    container_name: ingress
    build:
      context: ./ingress
      dockerfile: Dockerfile
    volumes:
      - "./shared:/usr/share/nginx/shared"
    ports:
      - "80:80"    # HTTP (redirects to HTTPS)
      - "443:443"  # HTTPS for DHIS2
      - "444:444"  # HTTPS for Adminer
      - "8000:8000" # HTTP file sharing (redirects to HTTPS)
      - "8443:8443" # HTTPS file sharing
    restart: unless-stopped

volumes:
  fileResource:
  logs:
  postgresql_data:
