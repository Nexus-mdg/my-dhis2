# Nginx configuration for reverse proxy
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # DHIS2 reverse proxy
    server {
        listen 443 ssl;
        server_name dhis2.local localhost _;

        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;

        # Route /adminer.local to the Adminer service
        location /adminer.local {
            proxy_pass http://adminer:8080/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location / {
            proxy_pass https://dhis2:8443;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Timeout settings - increased for DHIS2
            proxy_connect_timeout 300;
            proxy_send_timeout 300;
            proxy_read_timeout 300;

            # SSL verification settings for internal services
            proxy_ssl_verify off;
            proxy_ssl_session_reuse on;
        }
    }

    # DHIS2 Sync reverse proxy
    server {
        listen 445 ssl;
        server_name dhis2.local.sync localhost _;

        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;

        location / {
            proxy_pass https://dhis2-sync:8443;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Timeout settings - increased for DHIS2
            proxy_connect_timeout 300;
            proxy_send_timeout 300;
            proxy_read_timeout 300;

            # SSL verification settings for internal services
            proxy_ssl_verify off;
            proxy_ssl_session_reuse on;
        }
    }

    # Adminer reverse proxy
    server {
        listen 444 ssl;
        server_name adminer.local localhost _;

        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;

        location / {
            proxy_pass http://adminer:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # HTTP to HTTPS redirect
    server {
        listen 80;
        server_name dhis2.local dhis2.local.sync adminer.local localhost _;
        return 301 https://$host$request_uri;
    }

    # File sharing server with HTTPS for distributing files to containers
    server {
        listen 8443 ssl;
        server_name localhost;

        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;

        location / {
            root /usr/share/nginx/shared;
            autoindex on;
            autoindex_exact_size off;
            autoindex_localtime on;

            # Allow large file uploads
            client_max_body_size 500M;

            # Set appropriate headers for downloads
            add_header Content-Disposition "attachment";
        }
    }

    # Redirect HTTP file sharing to HTTPS
    server {
        listen 8000;
        server_name localhost;
        return 301 https://$host:8443$request_uri;
    }
}