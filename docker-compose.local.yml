x-dhis2-base: &dhis2-base
  image: dhis2-app
  build:
    context: .
    dockerfile: Dockerfile
  tty: true
  env_file:
    - ./.env
  volumes:
    - "fileResource:/opt/dhis2/files"
    - "logs:/opt/dhis2/logs"
  networks:
    - dhis2-network

x-db-base: &db-base
  image: postgis/postgis:12-3.3
  volumes:
    - "postgresql_data:/var/lib/postgresql/data"
  env_file:
    - ./.env
  environment:
    - POSTGRES_USER=${DB_USER}
    - POSTGRES_PASSWORD=${DB_PASSWORD}
    - POSTGRES_DB=${DB_NAME}

services:
  db:
    <<: *db-base
    networks:
      dhis2-network:
        aliases:
          - db
    ports:
      - "5432:5432"

  db-sync:
    <<: *db-base
    profiles: ["sync"]
    env_file:
      - ./.env.sync
    volumes:
      - "postgresql_data_sync:/var/lib/postgresql/data"
    ports:
      - "5434:5432"


  dhis2:
    <<: *dhis2-base
    ports:
      - "9443:8443"
    depends_on:
      - db

  dhis2-sync:
    <<: *dhis2-base
    profiles: ["sync"]
    env_file:
      - ./.env.sync
    volumes:
      - "fileResource_sync:/opt/dhis2/files"
      - "logs_sync:/opt/dhis2/logs"
    ports:
      - "9444:8443"
    depends_on:
      - db-sync


  adminer:
    image: adminer
    ports:
      - "8081:8080"
    depends_on:
      - db
    networks:
      - dhis2-network

  ingress:
    image: dhis2-ingress
    build:
      context: ./ingress
      dockerfile: Dockerfile
    volumes:
      - "./shared:/usr/share/nginx/shared"
    ports:
      - "80:80"    # HTTP (redirects to HTTPS)
      - "443:443"  # HTTPS for DHIS2
      - "444:444"  # HTTPS for Adminer
      - "8000:8000" # HTTP file sharing (redirects to HTTPS)
      - "8443:8443" # HTTPS file sharing
      - "445:445"  # HTTPS for DHIS2 sync (if)
    depends_on:
      - adminer
    networks:
      - dhis2-network

volumes:
  fileResource:
  logs:
  postgresql_data:
  fileResource_sync:
  logs_sync:
  postgresql_data_sync:

networks:
  dhis2-network:
    driver: bridge
